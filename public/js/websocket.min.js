var SGWebSocket=function(e){var n={};function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(o,i,function(n){return e[n]}.bind(null,i));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){var o=t(1),i=t(2),s=t(4);function r(){var e=this;this.url=this.getServerUrl(),s.addOnlineListener(function(){e.checkConnection()}),s.addOfflineListener(function(){e.stopTouchServerHandler(),e.closeConnection()}),this.registerOnTouchServerBackHandler(function(e){this.printLog(" Websocket Debug:"+e)})}r.prototype={singleton:!0,socket:null,onOpenListener:[],onConnectionSuccessHandler:function(){},onConnectionFailHandler:null,onGetOpenCourseHandler:function(){},onJoinCourseSuccessHandler:function(){},onJoinCourseFailHandler:function(){},onSendQuestionHandler:function(){},onReceiveQuestionHandler:function(){},onReceiveTargetUserHandler:function(){},getUsersInRoomHandler:function(){},onReceiveInClassStatusHandler:function(){},onReceiveRoomsDetailsHandler:function(){},onCloseQuestionHandler:function(){},onAnswerUpdateHandler:function(){},getRoomsHandler:function(){},onCourseClosedHandler:function(){},onTouchServerBackHandler:function(){},logOutputHandler:function(){},autoUpdateHandler:null,url:"",config:{},username:"",roomId:"",ticket:"",connectionTimeout:3e3,reconnectCounter:0,reconnectLimit:5,connectionStatus:null,connectionTimeoutCheckThread:null,timerThread:null,touchInterval:3e4,autoUpdateInterval:1e4,autoUpdateThreadId:null,eventPass:!0,getServerUrl:function(){return this.url},openConnection:function(){var e=this;this.url=this.getServerUrl(),this.printLog("connect websocket host: "+this.url),this.socket=new WebSocket(this.url),this.connectionTimeoutCheckThread||this.connectionTimeoutCheckHandler(),this.socket.onopen=function(){e.onConnectionSuccessHandler(),e.onConnectionSuccessHandler=function(){},e.onConnectionFailHandler=null,e.stopConnectionTimeoutCheckHandler(),e.handleOnOpenEvent()},this.socket.onmessage=function(n){e.logOutputHandler(e.parseMessageData(n.data)),e.handleReceiveMessage(n)},this.socket.onerror=function(n){e.printLog("websocket connection onerror"),e.printLog(n)},this.socket.onclose=function(n){e.printLog("eventName: onclose, code:"+n.code),e.printLog(n),1e3===n.code?(e.printLog("socket close normally. code:"+n.code),e.connectionStatus=null):(console.log("HonguNetwork.isOnline():"+o.isOnline()),o.isOnline()?(console.log("this.connectionStatus:"+e.connectionStatus),console.log("this.reconnectCounter:"+e.reconnectCounter),console.log("this.reconnectLimit:"+e.reconnectLimit),-1===e.connectionStatus||e.reconnectCounter>=e.reconnectLimit?(console.log("this.onConnectionFailHandler"),console.log(e.onConnectionFailHandler),e.onConnectionFailHandler?(e.onConnectionFailHandler(),e.onConnectionFailHandler=null):e.defaultConnectionFailHandler(e.getLang("core.serverErrorMsg"))):1===e.connectionStatus||e.connectionTimeoutCheckThread||e.connectionTimeoutCheckHandler()):(e.defaultConnectionFailHandler(),e.stopConnectionTimeoutCheckHandler()),e.printLog("socket close abnormally. code:"+n.code))}},connectionTimeoutCheckHandler:function(){var e=this;this.connectionTimeoutCheckThread&&this.stopConnectionTimeoutCheckHandler(),this.connectionTimeoutCheckThread=setInterval(function(){e.isConnection()||(e.reconnectCounter>=e.reconnectLimit?(e.connectionStatus=-1,e.socket.readyState&&3!==e.socket.readyState&&e.socket.close(),e.stopConnectionTimeoutCheckHandler(),e.autoUpdateHandler&&e.fireAutoUpdateHandler(e)):(e.connectionStatus=1,e.socket.close(),e.openConnection(),e.reconnectCounter=e.reconnectCounter+1))},this.connectionTimeout)},stopConnectionTimeoutCheckHandler:function(){clearInterval(this.connectionTimeoutCheckThread),this.connectionTimeoutCheckThread=null,this.connectionStatus=0,this.reconnectCounter=0,this.printLog("Stop connection check handler.")},parseMessageData:function(e){return JSON.parse(e)},handleReceiveMessage:function(e){var n=this.parseMessageData(e.data),t=this;if(n.action)switch(n.action){case"get-opened-room":this.printLog("get-opened-room complete"),this.onGetOpenCourseHandler(n.message),this.printLog(n.message);break;case"join-room":this.printLog(n.message),n.message.roomId.toString().length>=8?(this.onJoinCourseSuccessHandler(n.message),this.onJoinCourseSuccessHandler=function(){},this.printLog("join-room complete"),this.roomId=n.message.roomId):(this.onJoinCourseFailHandler(),this.printLog("join-room fail"));break;case"create-question":this.printLog("create-question"),this.printLog(n.message),this.onSendQuestionHandler();break;case"get-current-question":this.printLog("get-current-question"),this.printLog(n.message),this.onReceiveQuestionHandler(n.message.qtiId,n.message.examType);break;case"list-user-in-room":this.printLog("list-user-in-room"),this.printLog(n.message),this.getUsersInRoomHandler(n.message);break;case"close-question":this.printLog("close-question"),this.onCloseQuestionHandler();break;case"answer-question-update":this.printLog("answer-question-update"),t.eventPass&&(t.eventPass=!1,setTimeout(function(){t.onAnswerUpdateHandler(),t.eventPass=!0},3e3));break;case"list-rooms":this.printLog("list-rooms"),this.getRoomsHandler(n.message);break;case"course-closed":this.printLog("course-closed"),this.onCourseClosedHandler(n.message);break;case"touch-back":this.printLog("touch server response"),this.onTouchServerBackHandler(n.message),this.stopAutoUpdateHandler();break;case"get-target-user":this.printLog("get target user"),this.onReceiveTargetUserHandler(n.message);break;case"get-inClass-status":this.printLog("get-inClass-status"),this.onReceiveInClassStatusHandler(n.message);break;case"get-rooms-info":this.printLog("get-rooms-info"),this.onReceiveRoomsDetailsHandler(n.message);break;default:this.printLog("Invalid Action:"+n.action),this.printLog(n)}else this.printLog(e)},sendData:function(e){var n=this;this.socket?this.socket.readyState===WebSocket.CONNECTING?this.registerOnOpenEvent(function(){n.socket.send(e)}):this.socket.readyState===WebSocket.CLOSED||this.socket.readyState===WebSocket.CLOSING?(this.registerOnOpenEvent(function(){n.socket.send(e)}),this.checkConnection()):this.socket.readyState===WebSocket.OPEN&&this.socket.send(e):(this.registerOnOpenEvent(function(){n.socket.send(e)}),this.openConnection())},registerOnOpenEvent:function(e){return"function"==typeof e&&(this.onOpenListener.push(e),!0)},handleOnOpenEvent:function(){var e;for(e in this.onOpenListener)this.onOpenListener.hasOwnProperty(e)&&"function"==typeof this.onOpenListener[e]&&this.onOpenListener[e]();this.onOpenListener=[]},defaultConnectionFailHandler:function(e){this.printLog(e)},registerConnectionSuccessHandler:function(e){this.onConnectionSuccessHandler=e},registerConnectionFailHandler:function(e){this.onConnectionFailHandler=e},registerJoinCourseSuccessHandler:function(e){this.onJoinCourseSuccessHandler=e},registerGetOnlineCourseIdHandler:function(e){this.getRoomsHandler=e},registerJoinCourseFailHandler:function(e){this.onJoinCourseFailHandler=e},registerDidSendQuestionHandler:function(e){this.onSendQuestionHandler=e},registerDidReceiveQuestionHandler:function(e){this.onReceiveQuestionHandler=e},registerOnCloseQuestionHandler:function(e){this.onCloseQuestionHandler=e},registerOnAnswerUpdateHandler:function(e){this.onAnswerUpdateHandler=e},registerOnTouchServerBackHandler:function(e){this.onTouchServerBackHandler=e},registerOnCourseClosedHandler:function(e){this.onCourseClosedHandler=e},registerAutoUpdateHandler:function(e){this.autoUpdateHandler=e},registerLogOutputHandler:function(e){this.logOutputHandler=e},removeAutoUpdateHandler:function(e){this.autoUpdateHandler=null},closeConnection:function(){null!==this.socket&&this.socket.close(),this.roomId="",this.onOpenListener=[],this.onJoinCourseSuccessHandler=function(){},this.onJoinCourseFailHandler=function(){},this.onSendQuestionHandler=function(){},this.onReceiveQuestionHandler=function(){},this.getUsersInRoomHandler=function(){},this.onReceiveInClassStatusHandler=function(){},this.onConnectionSuccessHandler=function(){},this.onConnectionFailHandler=null,this.stopTouchServerHandler()},getOpenedCourse:function(){var e;this.socket;(e={}).action="list-rooms",e.sender=this.getUserName(),this.sendData(JSON.stringify(e))},getTargetUser:function(e){var n;(n={}).action="get-target-user",n.sender=this.getUserName(),"function"==typeof e&&(this.onReceiveTargetUserHandler=e),this.sendData(JSON.stringify(n))},sendJoinCourse:function(e){var n={action:"join-room"};n.sender=this.getUserName(),n.data={},n.data.roomId=e,n.data.userName=this.getUserName(),n.role=this.getIdentity(),this.sendData(JSON.stringify(n))},sendLeaveCourse:function(){var e={};this.roomId="",e.action="leave-room",e.sender=this.getUserName(),e.data={},this.sendData(JSON.stringify(e))},sendQuestionnaire:function(e,n,t,o){var i={action:"create-question"};i.sender=this.getUserName(),i.data={},i.data.cId=e,i.data.targetStudents=n,i.data.qtiId=t,i.data.examType=o,this.sendData(JSON.stringify(i))},touchServer:function(){var e={action:"touch"};e.sender=this.getUserName(),e.data={},this.printLog("touch websocket server."),this.makeTimeoutCheck(),this.sendData(JSON.stringify(e))},getUsersInRoom:function(e,n){var t;(t={}).action="list-user-in-room",t.sender=this.getUserName(),t.data={},t.data.roomId=e,"function"==typeof n&&(this.getUsersInRoomHandler=n),this.sendData(JSON.stringify(t))},standBySyncTeaching:function(){var e;(e={}).action="change-inClass-status",e.sender=this.getUserName(),e.data={examType:"questionnaire",status:"standby"},this.sendData(JSON.stringify(e))},startSyncTeaching:function(e,n){var t;(t={}).action="change-inClass-status",t.sender=this.getUserName(),t.data={qtiId:e,examType:"questionnaire",status:"running",pageIndex:n},this.sendData(JSON.stringify(t))},closeSyncTeaching:function(){var e;(e={}).action="change-inClass-status",e.sender=this.getUserName(),e.data={examType:"questionnaire",status:"terminated"},this.sendData(JSON.stringify(e))},startIrs:function(e,n){var t;(t={}).action="change-inClass-status",t.sender=this.getUserName(),t.data={qtiId:e,examType:"exam",status:"irs",qtiIndex:n||1},console.log("JSON.stringify(object)"),console.log(JSON.stringify(t)),this.sendData(JSON.stringify(t))},getInClassStatus:function(e){var n;(n={}).action="get-inClass-status",n.sender=this.getUserName(),n.data={},n.data.roomId=this.roomId,"function"==typeof e&&(this.onReceiveInClassStatusHandler=e),this.sendData(JSON.stringify(n))},getRoomsDetails:function(e){var n;(n={}).action="get-rooms-info",n.sender=this.getUserName(),this.onReceiveRoomsDetailsHandler=e,this.sendData(JSON.stringify(n))},removeUserInRoomListener:function(){this.getUsersInRoomHandler=function(){}},removeOnAnswerUpdateHandler:function(){this.onAnswerUpdateHandler=function(){}},removeOnCourseClosedHandler:function(){this.onCourseClosedHandler=function(){}},getCurrentQuestion:function(){var e;(e={}).action="get-current-question",e.sender=this.getUserName(),e.data={},this.sendData(JSON.stringify(e))},answerQuestion:function(){var e;(e={}).action="answer-question",e.sender=this.getUserName(),e.data={},this.sendData(JSON.stringify(e))},closeQuestion:function(e){var n;(n={}).action="close-question",n.sender=this.getUserName(),n.data={},n.data.roomId=e,this.sendData(JSON.stringify(n))},closeWebsocketConnection:function(){this.closeConnection()},getUserName:function(){return this.username},getIdentity:function(){return this.identity},checkConnection:function(e){var n;e||(e=this),!(n=e.socket)||n.readyState!==n.CLOSED&&n.readyState!==n.CLOSING||(e.openConnection(),e.registerConnectionSuccessHandler(function(){String(e.roomId).length>=8&&e.sendJoinCourse(e.roomId),e.startTouchServerHandler()}),e.registerConnectionFailHandler(function(){e.printLog(this.getLang("core.serverErrorMsg"))})),this.printLog("WebSocket handler check connection.")},startTouchServerHandler:function(){var e,n=this,t=this.touchInterval;this.stopTouchServerHandler(),e=setInterval(function(){n.touchServer()},t),this.timerThread=e},stopTouchServerHandler:function(){var e=this.timerThread;e&&(clearInterval(e),this.timerThread=null)},isConnection:function(){var e=this.socket;return!(!e||e.readyState!==e.OPEN)},makeTimeoutCheck:function(){var e=this;setTimeout(function(){e.isConnection()||(e.socket.close(),e.autoUpdateHandler&&e.fireAutoUpdateHandler(e))},this.connectionTimeout)},fireAutoUpdateHandler:function(e){e.autoUpdateThreadId||(e.autoUpdateThreadId=setInterval(e.autoUpdateHandler,e.autoUpdateInterval))},stopAutoUpdateHandler:function(){this.autoUpdateThreadId&&(clearInterval(this.autoUpdateThreadId),this.autoUpdateThreadId=null)},printLog:function(e){console.log("[Debug] "+e)},getLang:function(e){return i.getLang(e)},setUpIRSCourse:function(e,n,t,o,i,s){this.url=e,this.username=n,this.identity=t,this.roomId=o,this.isConnection()?this.sendJoinCourse(o):(this.openConnection(),this.registerConnectionSuccessHandler(function(){this.sendJoinCourse(o),this.startTouchServerHandler(),"function"==typeof i&&i()}),"function"==typeof s&&this.registerConnectionFailHandler(s)),this.printLog("setup irs room!")}};var a=new r;e.exports=a},function(e,n){function t(){}t.prototype={isOnline:function(){return navigator.onLine},echoTest:function(){return"test"}};var o=new t;e.exports=o},function(e,n,t){function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i=t(3);HonguLang=function(){},HonguLang.prototype={getLang:function(e){var n,t,o,s,r=e.split(".");if(n=(n=this.getCurrentLangCode()).replace("_","").charAt(0).toUpperCase()+n.replace("_","").substr(1).toLowerCase(),void 0===i||!i.hasOwnProperty(n))return"!"+e+"!";if(void 0!==(t=i[n])){for(o in s=t,r)r.hasOwnProperty(o)&&s.hasOwnProperty(r[o])&&(s=s[r[o]]);if("string"==typeof s)return s}return"!"+e+"!"},setLang:function(e){"object"===o(e)&&jQuery.extend(!0,HonguLang,e)},setCurrentLangCode:function(e){localStorage.setItem("HG_LANG_CODE",e)},getCurrentLangCode:function(){var e=localStorage.getItem("HG_LANG_CODE");return null===e||void 0===e?"zh_tw":e}};var s=new HonguLang;e.exports=s},function(e,n){"undefined"==typeof LangConfig&&(LangConfig={}),LangConfig.Zhtw={core:{back:"返回",searchText:"搜尋",warning:"警告",error:"錯誤",hint:"提示",finish:"完成",reset:"重置",errorConnectionMsg:"連線失敗！請確認您的網路是否連線正常。",errorConnectionShortMsg:"未連接至網路",serverErrorMsg:"伺服器發生錯誤",processing:"處理中",loading:"讀取中",logout:"登出",cancel:"取消",ok:"確定",day:"天",sessionErrorMsg:"登入資訊失效，請重新登入。",networkRequired:"此功能需要網路連線！",backButtonMsg:"您確定要離開？",noData:"無資料",update:"App 有新版本，請更新",keyword:"請輸入關鍵字",languageProcessing:"語系設定中",appName:"愛上互動"},irs:{title:"愛上互動",immediatelyQuestion:"即時出題",referenceDatabase:"引用題庫",immediatelyQuestionnaire:"互動統計",immediatelyExam:"即時測驗",askQuestionnaire:"提問",customizationOptions:"自訂選項",templateOptions:"選項模板",allPerson:"全體人員",specifiedPerson:"個別指定",randomPerson:"隨機挑選",startInteractiveCourse:"開啟互動課程",joinInteractiveCourse:"加入互動課程",establishQuizQuestion:"題目",quizDatabasePreviewTitle:"題目",quizType:"題型",quizDatabasePreviewItem:"答案選項",duringTime:"經過時間",answeredPerson:"作答人數",statisticResult:"統計結果",joinPerson:"參與人數",submitPerson:"提交人數",alreadyAnswer:"已作答",alreadyAnswerPerson:"已作答人數",person:"人",noAnswer:"未作答",immediateQuestionnaires:"即時互動",immediateExam:"即時測驗",singleChoice:"單選",multipleChoice:"複選",trueAndFalse:"是非",shortAnswer:"簡答",enterQuestion:"請輸入題目",createNextQuestion:"新增下一題",addQuestion:"確定新增",setCorrectAnswer:"設定正解",needCorrectAnswer:"尚未設定正確答案，請繼續填寫",enterQuizName:"請輸入互動名稱",editQuestionSort:"編輯順序",editScoreAllocation:"編輯配分",noQuestion:"目前尚無題目",choiceRightQuestion:"請挑選右側題目",choiceQuestion:"請從下方列表挑選題目",msgDeleteQuestion:"確定要刪除嗎？",edit:"編輯",delete:"刪除",save:"儲存",leave:"離開",needTestName:"您尚未輸入互動名稱!",saveInteractive:"儲存互動",sendQuestion:"開始互動",saveAndSendQuestion:"儲存並開始",publishQuestion:"發布",submitQuiz:"提交",giveUp:"放棄",completed:"完成",scanQRCode:"請掃描QR Code或登入APP",joinInteraction:"加入互動",irsEditorImageLimit:"抱歉，夾檔僅限四個！",irsQtiNotice:"generate by app",irsQuizDatabaseOverLength:"抱歉，出題數量僅限10題以內！",irsDiscardContent:"您確定要離開此畫面，並放棄目前已編輯的內容嗎?",irsDiscardContentAndCloseCourse:"離開此畫面，將關閉互動課程，您確定要離開此畫面，並放棄目前已編輯的內容嗎?",irsDiscardInteraction:"下次再進行互動嗎?",irsDiscardChoose:"您確定要離開此畫面，並放棄目前已選取的內容嗎?",irsLeaveStatisticAndCloseQuiz:"離開此畫面，將結束本次即時互動，您確定要離開嗎?",irsLeaveInteractiveCourse:"您確定要離開互動課程嗎?",irsCloseQuiz:"離開後將關閉互動，並讓學生自動提交，確定要離開嗎？",irsCheckLeavePage:"確定要離開此畫面嗎?",irsStudentLeaveQti:"您確定要放棄作答，並離開作答畫面嗎?",irsEstablishNotCompleted:"您還有題目或選項尚未填寫完畢，請繼續編輯",irsQuizDatabaseNotCompleted:"您尚未挑選題目",irsQuizIsClosed:"互動已被教師關閉，已將目前的作答記錄送出!",joinCourseSuccess:"目前尚無即時互動",joinCourseFail:"互動課程已關閉!",temporarilyLeave:"暫時離開",closeInteractive:"關閉互動",checkCloseInteractive:"確定要關閉互動嗎?",cannotUseRandomPerson:"因人數過少，因此無法使用隨機挑選功能",searchQuestionNotFound:"找不到任何題目",pleaseKeyinContent:"請輸入選項文字",specifiedPersonNoChoice:"您尚未挑選作答對象，請重新選擇",randomPersonNoChoice:"您尚未挑選作答對象，請按「開始」按鈕進行隨機挑選",submitSuccess:"提交成功! 感謝您的參與!",submitRank:"您是第%rank%位提交",submitScore:"測驗分數%score%分",resendQuiz:"重發",goRealTimeStatistics:"進入即時統計",irsInteractiveHistory:"請點選左側互動歷程進行觀看<br/>或進行一份新的互動體驗",answeredCount:"提交人數%count%人",highestScore:"最高分數%score%分",averageScore:"平均分數%score%分",lowest:"最低分數%score%分",questionCount:"問題數量%count%題",interactiveHistory:"互動歷程",noInteractiveHistory:"目前尚無互動歷程",statisticAnsweredCount:"提交人數",statisticHighestScore:"最高分數",statisticAverageScore:"平均分數",statisticLowestScore:"最低分數",statisticQuestionCount:"問題數量",questionAlreadyExists:"這題已經加入，不再重複加入",totallyAgree:"非常滿意",partlyAgree:"滿意",noComment:"普通",partlyDisagree:"不滿意",totallyDisagree:"非常不滿意",score:"分",totalScore:"總分",averageAssignScore:"平均配分",customAssignScore:"自訂配分",totalScoreNeedInteger:"總分須為整數，請重新設定",introductionTip1:"輸入網址",introductionTip2:"輸入互動碼",introductionTip3:"參與互動",appSearchKeyword:"愛上互動 學生版",qualifiedList:"合格名單",winners:"得獎名單",slotMachineStart:"開始",slotMachineReStart:"重新挑選",scanQrcodeJoin:"掃描上方QR Code，加入互動",irsConnectionError:"互動連線失敗，請確認您的網路環境是否連線",irsReConnectionMsg:"伺服器連線中",updateDataBySelf:"立即更新",lastUpdateDataTime:"最後更新時間",answerYet:"尚未作答",notYetResponded:"目前尚無人回應",errorProne:"錯誤率高",showAnswer:"顯示答案",hideAnswer:"隱藏答案"}},e.exports=LangConfig},function(e,n){var t=function(){this.init()};t.prototype={isReady:!1,registedListeners:{onlineListener:[],offlineListener:[]},init:function(){var e=this;window.addEventListener("load",function(){e.isReady=!0,window.addEventListener("online",function(){e.fireOnlineEvent()},!1),window.addEventListener("offline",function(){e.fireOfflineEvent()},!1),console.log("Document listeners is ready!")},!1)},fireOnlineEvent:function(){var e;if(console.log("this"),console.log(this),console.log(this.isReady),this.isReady)for(e in console.debug("Fire online event."),this.registedListeners.onlineListener)this.registedListeners.onlineListener.hasOwnProperty(e)&&"function"==typeof this.registedListeners.onlineListener[e]&&this.registedListeners.onlineListener[e]();else console.warn("Online event will not fire after this device on reday.")},addOnlineListener:function(e){return"function"!=typeof e?(console.error("Parameter of listener must be a function."),!1):(this.registedListeners.onlineListener.push(e),!0)},removeOnlineListener:function(e){var n;for(n in this.registedListeners.onlineListener)if(this.registedListeners.onlineListener.hasOwnProperty(n)&&this.registedListeners.onlineListener[n]===e)return this.registedListeners.onlineListener.splice(n,1),!0;return!1},fireOfflineEvent:function(){var e;if(this.isReady)for(e in console.debug("Fire offline event."),this.registedListeners.offlineListener)this.registedListeners.offlineListener.hasOwnProperty(e)&&"function"==typeof this.registedListeners.offlineListener[e]&&this.registedListeners.offlineListener[e]();else console.warn("Offline event will not fire after this device on reday.")},addOfflineListener:function(e){return"function"!=typeof e?(console.error("Parameter of listener must be a function."),!1):(this.registedListeners.offlineListener.push(e),!0)},removeOfflineListener:function(e){var n;for(n in this.registedListeners.offlineListener)if(this.registedListeners.offlineListener.hasOwnProperty(n)&&this.registedListeners.offlineListener[n]===e)return this.registedListeners.offlineListener.splice(n,1),!0;return!1}};var o=new t;e.exports=o}]);